---
- name: Basic setup for all nodes
  hosts: all
  gather_facts: true
  become: true
  vars_files:
    - ../vars/global.yml
  tasks:

    - name: Config -> Update bash prompt in .bashrc
      lineinfile:
        dest: "/home/{{ ansible_user }}/.bashrc"
        regexp: '^PS1='
        line: "PS1={{ ps1 }}"
        state: present

    - name: Config -> Write aliases to .bashrc
      lineinfile:
        dest: "/home/{{ ansible_user }}/.bashrc"
        state: present
        line: "{{ item }}"
      with_items:
        - alias ll="ls -alFh --color=auto"
        - alias ls="ls -a --color=auto"
        - alias grep="grep --color=auto"
        - alias pull-all-repos="git all pull"
        - export LOG_DONE="[\e[32mDONE\e[0m]"
        - export LOG_ERROR="[\e[1;31mERROR\e[0m]"
        - export LOG_INFO="[\e[34mINFO\e[0m]"
        - export LOG_WARN="[\e[93mWARN\e[0m]"
        - export Y="\e[93m"
        - export P="\e[35m"
        - export D="\e[0m"
        - docker run --rm mwendler/figlet:latest "$(hostname)"

    - name: Config -> Create directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: u=rwx,g=rx,o=rx
      with_items:
        - "/home/{{ ansible_user }}/work"
        - "/home/{{ ansible_user }}/work/repos"
        - "/home/{{ ansible_user }}/work/repos/sebastian-sommerfeld-io"
        - "/home/{{ ansible_user }}/tmp"

    - name: Install -> Basic packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - software-properties-common
        state: latest
        update_cache: true

    - name: Install -> Tool packages
      apt:
        pkg:
          - ncdu
          - htop
          - git
          - neofetch
        state: latest
        update_cache: true

    - name: Uninstall -> Some pre-installed packages
      apt:
        pkg:
          - thunderbird
          - libreoffice
          - totem
          - totem-video-thumbnailer
        state: absent

    - name: Config -> Copy git configuration
      ansible.builtin.copy:
        src: ../assets/.gitconfig
        dest: "/home/{{ ansible_user }}/.gitconfig"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "{{ file_permissions }}"

- name: Basic setup for all nodes (non-root)
  hosts: all
  gather_facts: false
  become: false
  vars_files:
    - ../vars/global.yml
  tasks:

    - name: Config -> Clone git repositories (sebastian-sommerfeld-io)
      ansible.builtin.git:
        repo: "git@github.com:sebastian-sommerfeld-io/{{ item }}.git"
        dest: "/home/{{ ansible_user }}/work/repos/sebastian-sommerfeld-io/{{ item }}"
        key_file: "/home/{{ ansible_user }}/.ssh/id_rsa"
      with_items:
        - configs

- name: Setup for x86 workstations
  hosts: workstations
  gather_facts: true
  become: true
  vars_files:
    - ../vars/global.yml
  tasks:

    - name: Info -> whoami
      ansible.builtin.command: whoami

- name: Setup for workstation 'caprica.fritz.box'
  hosts: caprica.fritz.box
  gather_facts: true
  become: true
  vars_files:
    - ../vars/global.yml
  tasks:

    - name: Config -> Create ssh keypair
      openssh_keypair:
        path: "/home/{{ ansible_user }}/.ssh/id_rsa"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        type: rsa
        size: 4096
        state: present
        force: false

    - name: Docker Setup -> Print 'lsb_release -sc'
      debug:
        msg: "{{ ansible_distribution_release }}"

    - name: Docker Setup -> Add GPG apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Docker Setup -> Add apt repository
      apt_repository:
        repo: "deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Docker Setup -> Install docker-ce and docker-compose
      apt:
        name:
          - docker-ce
          - docker-compose
        state: latest
        update_cache: true

    - name: Docker Setup -> Add default user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true

- name: Setup for RasPi nodes
  hosts: raspi
  gather_facts: true
  become: true
  vars_files:
    - ../vars/global.yml
  tasks:

    - name: Info -> whoami
      ansible.builtin.command: whoami
